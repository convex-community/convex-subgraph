# Curve.fi tricrypto2 subgraph Schema - Convex Community

type TricryptoSnapshot @entity {
    id: ID!
    blockNumber: BigInt!
    timestamp: BigInt!
    usdtBalance: BigInt!
    ethBalance: BigInt!
    wbtcBalance: BigInt!
    virtualPrice: BigInt!
    ethOraclePrice: BigInt!
    btcOraclePrice: BigInt!
    ethScalePrice: BigInt!
    btcScalePrice: BigInt!
    fee: BigInt!
    swapRates: SwapRate!
}


# handleGetDy to get usd <-> btc/eth rates:
type SwapRate @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    USDETHSwap: SwapValue!
    ETHUSDSwap: SwapValue!
    USDBTCSwap: SwapValue!
    BTCUSDSwap: SwapValue!
}


# dollar value of swaps:
type SwapValue @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    qt1000: BigInt!
    qt10000: BigInt!
    qt100000: BigInt!
    qt1000000: BigInt!
    qt10000000: BigInt!
}


type AddLiquidityEvent @entity {
    id: ID!
    timestamp: BigInt!
    blockNumber: BigInt!
    user: User! # address
    amountUSD: BigInt! # uint256
    amountETH: BigInt! # uint256
    amountBTC: BigInt! # uint256
    crv3CryptoSupply: BigInt!
}


type RemoveLiquidityEvent @entity {
    id: ID!
    blockNumber: BigInt!
    timestamp: BigInt!
    user: User!
    amountUSD: BigInt!
    amountETH: BigInt!
    amountBTC: BigInt!
    crv3CryptoSupply: BigInt!
}


type ExchangeEvent @entity {
    id: ID!
    blockNumber: BigInt!
    timestamp: BigInt!
    user: User!
    assetIn: BigInt!
    amountIn: BigInt!
    assetOut: BigInt!
    amountOut: BigInt!
    crv3CryptoSupply: BigInt!
}


type ClaimAdminFeeEvent @entity {
    id: ID!
    blockNumber: BigInt!
    timestamp: BigInt!
    amountClaimed: BigInt!
    claimDollarValue: BigInt!
}


# user stats
type User @entity {
    id: ID!
    address: Bytes!
    deposits: [AddLiquidityEvent!] @derivedFrom(field: "user")
    withdrawals: [RemoveLiquidityEvent!] @derivedFrom(field: "user")
    exchanges: [ExchangeEvent!] @derivedFrom(field: "user")
}

