type Platform @entity {
  id: ID!
  poolCountV1: BigInt!
  poolCountV2: BigInt!
  pools: [Pool!]! @derivedFrom(field: "platform")
}

type Pool @entity {
  id: ID!
  address: Bytes!
  platform: Platform!
  name: String!
  symbol: String!
  metapool: Boolean
  basePool: Bytes!
  coins: [Bytes!]!
  coinDecimals: [BigInt!]!
  assetType: Int!

  creationDate: BigInt!
  creationTx: Bytes!
  creationBlock: BigInt!

  dailyPoolSnapshots: [DailyPoolSnapshot!] @derivedFrom(field: "pool")

  hourlySwapVolumeSnapshots: [HourlySwapVolumeSnapshot!] @derivedFrom(field: "pool")
  dailySwapVolumeSnapshots: [DailySwapVolumeSnapshot!] @derivedFrom(field: "pool")
  weeklySwapVolumeSnapshots: [WeeklySwapVolumeSnapshot!] @derivedFrom(field: "pool")

  hourlyLiquidityVolumeSnapshots: [HourlyLiquidityVolumeSnapshot!] @derivedFrom(field: "pool")
  dailyLiquidityVolumeSnapshots: [DailyLiquidityVolumeSnapshot!] @derivedFrom(field: "pool")
  weeklyLiquidityVolumeSnapshots: [WeeklyLiquidityVolumeSnapshot!] @derivedFrom(field: "pool")

}

type BasePool @entity {
  id: ID!
  coins: [Bytes!]!
  coinDecimals: [BigInt!]!
}

type TokenSnapshot @entity {
  id: ID!
  price: BigDecimal!
}

type DailyPoolSnapshot @entity {
  id: ID!
  pool: Pool!
  virtualPrice: BigInt!
  A: BigInt!
  lpTokenTotalSupply: BigInt!
}

type HourlySwapVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountSold: BigDecimal!
  amountBought: BigDecimal!
  amountSoldUSD: BigDecimal!
  amountBoughtUSD: BigDecimal!
  count: BigInt!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  timestamp: BigInt!
}

type DailySwapVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountSold: BigDecimal!
  amountBought: BigDecimal!
  amountSoldUSD: BigDecimal!
  amountBoughtUSD: BigDecimal!
  count: BigInt!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  timestamp: BigInt!
}

type WeeklySwapVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountSold: BigDecimal!
  amountBought: BigDecimal!
  amountSoldUSD: BigDecimal!
  amountBoughtUSD: BigDecimal!
  count: BigInt!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  timestamp: BigInt!
}


type HourlyLiquidityVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountAdded: BigInt!
  amountRemoved: BigInt!
  addCount: BigInt!
  removeCount: BigInt
  volume: BigInt!
  volumeUSD: BigInt!
  timestamp: BigInt!
}

type DailyLiquidityVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountAdded: BigInt!
  amountRemoved: BigInt!
  addCount: BigInt!
  removeCount: BigInt
  volume: BigInt!
  volumeUSD: BigInt!
  timestamp: BigInt!
}

type WeeklyLiquidityVolumeSnapshot @entity {
  id: ID!
  pool: Pool!
  amountAdded: BigInt!
  amountRemoved: BigInt!
  addCount: BigInt!
  removeCount: BigInt
  volume: BigInt!
  volumeUSD: BigInt!
  timestamp: BigInt!
}

type SwapEvent @entity {
  id: ID!
  pool: Pool!
  tokenSold: Bytes!
  tokenBought: Bytes!
  amountSold: BigDecimal!
  amountBought: BigDecimal!
  amountSoldUSD: BigDecimal!
  amountBoughtUSD: BigDecimal!
}

type LiquidityEvent @entity {
  id: ID!
  pool: Pool!
  token: Bytes!
  tokenAmount: BigInt!
  removal: Boolean!
}