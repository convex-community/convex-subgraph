type Platform @entity {
  id: ID!
  poolCount: BigInt!
  pools: [Pool!]! @derivedFrom(field: "platform")
  gauges: [Gauge!] @derivedFrom(field: "platform")
  gaugeIds: [String!]!
  snapshotTimes: [SnapshotTime!] @derivedFrom(field: "platform")
}


type Gauge @entity {
  id: ID!
  address: Bytes!
  type: GaugeType!
  platform: Platform!
  pool: Pool!
  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!

  weights: [GaugeWeight!] @derivedFrom(field: "gauge")
  emissions: [Emission!] @derivedFrom(field: "gauge")
}

type AdminClaim @entity {
  id: ID!
  tx: Bytes!
  block: BigInt!
  timestamp: BigInt!
  week: BigInt!
  from: Bytes!
  pools: [Pool!]!
  ethPrice: BigDecimal!
  btcPrice: BigDecimal!
  linkPrice: BigDecimal!
  crvPrice: BigDecimal!
}


type Pool @entity {
  id: ID!
  lpToken: Bytes!
  name: String!
  swap: Bytes!
  platform: Platform!
  assetType: Int!
  tvl: BigDecimal!
  coins: [Bytes!]! #address
  adminClaims: [AdminClaim!] @derivedFrom(field:"pools")
  gauges: [Gauge!] @derivedFrom(field: "pool")
  snapshots: [PoolSnapshot!] @derivedFrom(field: "pool")
  emissions: [Emission!] @derivedFrom(field: "pool")

}

type SnapshotTime @entity {
  id: ID!
  platform: Platform!
}

type PoolSnapshot @entity {
  id: ID!
  pool: Pool!
  virtualPrice: BigDecimal!
  " Estimated fees can be skewed by TVL for some pools "
  fees: BigDecimal!
  lpTokenSupply: BigInt!
  tvl: BigDecimal!
  timestamp: BigInt!
  block: BigInt!
}

type GaugeWeight @entity {
  id: ID!
  gauge: Gauge!
  timestamp: BigInt!
  block: BigInt!
  weight: BigDecimal!
}

type Emission @entity {
  id: ID!
  gauge: Gauge!
  pool: Pool!
  timestamp: BigInt!
  block: BigInt!
  crvAmount: BigDecimal!
  value: BigDecimal!
}

type GaugeType @entity {
  id: ID!
  name: String!
  weight: BigDecimal!
  gaugeCount: BigInt!
  gauges: [Gauge!] @derivedFrom(field: "type")
}

type GaugeTotalWeight @entity {
  id: ID!
  timestamp: BigInt!
  block: BigInt!
  weight: BigDecimal!
}